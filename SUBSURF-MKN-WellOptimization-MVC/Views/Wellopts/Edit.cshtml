@model SUBSURF_MKN_WellOptimization_MVC.Models.Wellopt

@{
    ViewBag.Title = "Edit";
}
@{

    if (@ViewBag.role == "Contributor")
    {

        @section uploadLink{ 
            <li>@Html.ActionLink("Upload", "Index", "Upload") </li>
            <li>@Html.ActionLink("Logs", "Index", "ActionLogs")</li>
            }





    }
}
<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.RecordDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecordDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecordDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UWI, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UWI, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UWI, "", new { @class = "text-danger" })
                <div class="text-danger">@ViewBag.UWIErr </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WellName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WellName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WellName, "", new { @class = "text-danger" })
                <div class="text-danger">@ViewBag.WellNameErr</div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.PumpType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PumpType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PumpType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OPTIMIZATIONTYPES, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.OPTIMIZATIONTYPES, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OPTIMIZATIONTYPES, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
