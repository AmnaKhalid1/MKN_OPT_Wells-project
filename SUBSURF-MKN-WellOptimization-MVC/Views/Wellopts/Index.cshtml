
@model IEnumerable<SUBSURF_MKN_WellOptimization_MVC.Models.Wellopt>

@{
    ViewBag.Title = "MKN Well OPT";

    <!--you will need to add this in every view-->
    if (@ViewBag.role == "Contributor")
    {

        @section uploadLink{  
            <li>@Html.ActionLink("Upload", "Index", "Upload") </li>
            <li>@Html.ActionLink("Logs", "Index", "ActionLogs")</li>
            }





    }
}
<style>

    .table-hover {
        line-height: normal;
        font-size: 1.5rem;
        background-color: #EEEEEE;
    }
</style>
<h2>MKN Well Optimization Records</h2>

@{
    if (@ViewBag.role == "Contributor")
    {
        <p>
            @Html.ActionLink("Create New Record", "Create")
        </p>
    }
}



@{
    if (@ViewBag.role == "Contributor")
    {
        <div>

            @(Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(model => model.Id).Titled("ID").Sortable(true);
        columns.Add(model => model.RecordDate).Titled("RecordDate").Filterable(GridFilterType.Double).Formatted("{0:dd-MMM-yy}").Sortable(true);
        columns.Add(model => model.UWI).Titled("UWI");
        columns.Add(model => model.WellName).Titled("WellName");
    //should add the row from the display

        columns.Add(model => model.PumpType).Titled("Pump Type");
        columns.Add(model => model.OPTIMIZATIONTYPES).Titled("Optimization Types");
        columns.Add(model => model.Comments).Titled("Comments");

        columns.Add().RenderedAs(model => Html.ActionLink("Edit", "Edit", new
        {
            id = model.Id

        }));


        columns.Add().RenderedAs(model => Html.ActionLink("Details", "Details", new
        {
            id = model.Id

        }));

        columns.Add().RenderedAs(model => Html.ActionLink("Delete", "Delete", new
        {
            id = model.Id

        }));

        
    })
    .UsingFilterMode(GridFilterMode.Header)
    .Empty("No data found")
    .Filterable()
    .Pageable(pager =>
    {
        pager.PagesToDisplay = 10;
        pager.RowsPerPage = 20;
    })
    .Css("css-classes")
    .AppendCss("table-hover")

    )
        </div>

    }
    else
    {


        <div>

            @(Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(model => model.Id).Titled("ID").Sortable(true);
        columns.Add(model => model.RecordDate).Titled("RecordDate").Filterable(GridFilterType.Double).Formatted("{0:dd-MMM-yy}").Sortable(true);
        columns.Add(model => model.UWI).Titled("UWI");
        columns.Add(model => model.WellName).Titled("WellName");


        columns.Add(model => model.PumpType).Titled("Pump Type");
        columns.Add(model => model.OPTIMIZATIONTYPES).Titled("Optimization Types");
        columns.Add(model => model.Comments).Titled("Comments");


        columns.Add().RenderedAs(model => Html.ActionLink("Details", "Details", new
        {
            id = model.Id

        }));


    })
    .UsingFilterMode(GridFilterMode.Header)
    .Empty("No data found")
    .Filterable()
    .Pageable(pager =>
    {
        pager.PagesToDisplay = 10;
        pager.RowsPerPage = 20;
      

    })
    .Css("css-classes")
    .AppendCss("table-hover")

    )
        </div>

    }







}
